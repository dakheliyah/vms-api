<?php

namespace App\Http\Controllers\API;

use App\Http\Controllers\Controller;
use Spatie\Activitylog\Models\Activity;
use Illuminate\Http\Request;
use App\Helpers\AuthorizationHelper;

class ActivityLogController extends Controller
{
    /**
     * @OA\Get(
     *      path="/api/admin/activity-logs",
     *      operationId="getAdminActions",
     *      tags={"Admin"},
     *      summary="Get a list of actions performed by admins",
     *      description="Returns a paginated list of activity logs generated by users with admin privileges.",
     *      security={{"bearerAuth":{}}},
     *      @OA\Parameter(
     *          name="per_page",
     *          in="query",
     *          description="Number of items per page",
     *          required=false,
     *          @OA\Schema(type="integer", default=15)
     *      ),
     *      @OA\Response(
     *          response=200,
     *          description="Successful operation",
     *          @OA\JsonContent(
     *              type="object",
     *              @OA\Property(property="data", type="array", @OA\Items(ref="#/components/schemas/Activity")),
     *              @OA\Property(property="links", type="object"),
     *              @OA\Property(property="meta", type="object")
     *          )
     *      ),
     *      @OA\Response(response=401, description="Unauthenticated"),
     *      @OA\Response(response=403, description="Forbidden - User is not an admin")
     * )
     */
    public function getAdminActions(Request $request)
    {
        if (!AuthorizationHelper::isAdmin($request)) {
            return response()->json(['message' => 'Forbidden'], 403);
        }

        $perPage = $request->query('per_page', 15);

        $activities = Activity::where('log_name', 'admin')
            ->with(['causer', 'subject']) // Eager load relationships for context
            ->latest()
            ->paginate($perPage);

        return response()->json($activities);
    }
}
