{
    "openapi": "3.0.0",
    "info": {
        "title": "Colombo Relay ITS API",
        "description": "API for managing ITS passes and related information for Colombo Relay.",
        "contact": {
            "email": "admin@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://vms-api-main-branch-zuipth.laravel.cloud",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/accommodations": {
            "get": {
                "tags": [
                    "Accommodations"
                ],
                "summary": "Get list of accommodations",
                "description": "Returns list of accommodations, optionally filtered by miqaat_id, its_id (encrypted), or type.",
                "operationId": "getAccommodationsList",
                "parameters": [
                    {
                        "name": "miqaat_id",
                        "in": "query",
                        "description": "Filter by Miqaat ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "its_id",
                        "in": "query",
                        "description": "Filter by encrypted ITS ID (will be decrypted by middleware)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by accommodation type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Accommodation"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - User not authorized for the provided ITS ID or to list general accommodations without specific ITS ID filter if not admin (not implemented yet)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Accommodations"
                ],
                "summary": "Create new accommodation record",
                "description": "Creates a new accommodation record. 'its_id' is expected to be encrypted.",
                "operationId": "storeAccommodation",
                "requestBody": {
                    "description": "Accommodation object that needs to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "miqaat_id",
                                    "its_id",
                                    "type",
                                    "name",
                                    "address"
                                ],
                                "properties": {
                                    "miqaat_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "its_id": {
                                        "description": "Encrypted ITS ID",
                                        "type": "string",
                                        "example": "encrypted_its_string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Hotel"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Grand Hyatt"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, Colombo"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Accommodation created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Accommodation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - User not authorized to create accommodation for this ITS ID"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/accommodations/{id}": {
            "get": {
                "tags": [
                    "Accommodations"
                ],
                "summary": "Get accommodation information",
                "description": "Returns accommodation data by ID.",
                "operationId": "getAccommodationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of accommodation to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Accommodation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - User not authorized to view this accommodation"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Accommodations"
                ],
                "summary": "Update existing accommodation record",
                "description": "Updates an existing accommodation record. 'its_id' is expected to be encrypted if provided.",
                "operationId": "updateAccommodation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of accommodation to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Accommodation object that needs to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "miqaat_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "its_id": {
                                        "description": "Encrypted ITS ID",
                                        "type": "string",
                                        "example": "encrypted_its_string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Apartment"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Serviced Apartment Colombo"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "456 Galle Rd, Colombo"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Accommodation updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Accommodation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - User not authorized to update this accommodation or assign to the target ITS ID"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Accommodations"
                ],
                "summary": "Delete accommodation record",
                "description": "Deletes an accommodation record by ID.",
                "operationId": "deleteAccommodation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of accommodation to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Accommodation deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Accommodation deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - User not authorized to delete this accommodation"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in a user",
                "description": "Logs in a user with email and password, returns a JWT token.",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful, token returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "JWT access token",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "description": "Token expiry in seconds",
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "error": "invalid_credentials"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Could not create token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "error": "could_not_create_token"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/me": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user details",
                "description": "Returns details of the currently authenticated user.",
                "operationId": "getAuthenticatedUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated or Token absent/invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "error": "token_absent_or_invalid"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "error": "user_not_found"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out a user",
                "description": "Invalidates the current user's JWT token.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Successfully logged out"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Could not invalidate token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "error": "could_not_invalidate_token"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh a JWT token",
                "description": "Refreshes an expired JWT token, returns a new token.",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "New JWT access token",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "description": "Token expiry in seconds",
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token cannot be refreshed (e.g., blacklisted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "error": "could_not_refresh_token"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Could not refresh token (general error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "error": "could_not_refresh_token"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/hizbe-saifee-groups": {
            "get": {
                "tags": [
                    "Hizbe Saifee Groups"
                ],
                "summary": "Get list of Hizbe Saifee groups",
                "description": "Returns list of Hizbe Saifee groups. Admin access required.",
                "operationId": "getHizbeSaifeeGroupsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/HizbeSaifeeGroup"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden (Admin access required)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Hizbe Saifee Groups"
                ],
                "summary": "Update an existing Hizbe Saifee group",
                "description": "Updates an existing Hizbe Saifee group. Admin access required.",
                "operationId": "updateHizbeSaifeeGroup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateHizbeSaifeeGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/HizbeSaifeeGroup"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden (Admin access required)"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Hizbe Saifee Groups"
                ],
                "summary": "Store a new Hizbe Saifee group",
                "description": "Stores a new Hizbe Saifee group. Admin access required.",
                "operationId": "storeHizbeSaifeeGroup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreHizbeSaifeeGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/HizbeSaifeeGroup"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden (Admin access required)"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/hizbe-saifee-groups/{id}": {
            "get": {
                "tags": [
                    "Hizbe Saifee Groups"
                ],
                "summary": "Get Hizbe Saifee group information",
                "description": "Returns Hizbe Saifee group data. Admin access required.",
                "operationId": "getHizbeSaifeeGroupById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Hizbe Saifee Group id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HizbeSaifeeGroup"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden (Admin access required)"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Hizbe Saifee Groups"
                ],
                "summary": "Delete an existing Hizbe Saifee group",
                "description": "Deletes an existing Hizbe Saifee group. Admin access required.",
                "operationId": "deleteHizbeSaifeeGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Hizbe Saifee Group id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "success": true,
                                    "message": "Hizbe Saifee Group deleted successfully."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden (Admin access required)"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/mumineen": {
            "get": {
                "tags": [
                    "Mumineen"
                ],
                "summary": "Get all Mumineen records or a specific one",
                "description": "If an encrypted ITS ID is provided in the query, it returns the specific Mumineen record. If no ITS ID is provided, an empty response is returned. Requires authentication.",
                "operationId": "getMumineenOrList",
                "parameters": [
                    {
                        "name": "its_id",
                        "in": "query",
                        "description": "Encrypted ITS ID of the Mumineen to retrieve (optional).",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "success": true,
                                    "data": []
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Unauthenticated."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Mumineen not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "success": false,
                                    "message": "Mumineen not found"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Mumineen"
                ],
                "summary": "Create a new Mumineen record",
                "description": "Stores a new Mumineen record. The 'its_id' is expected to be encrypted. Requires authentication.",
                "operationId": "storeMumineen",
                "requestBody": {
                    "description": "Mumineen data object. `its_id` must be unique.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "its_id",
                                    "full_name",
                                    "gender"
                                ],
                                "properties": {
                                    "its_id": {
                                        "description": "Encrypted ITS ID. Must be unique.",
                                        "type": "string",
                                        "example": "encrypted_string"
                                    },
                                    "hof_id": {
                                        "description": "Encrypted ITS ID of the Head of Family.",
                                        "type": "string",
                                        "example": "encrypted_string"
                                    },
                                    "full_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female"
                                        ],
                                        "example": "male"
                                    },
                                    "age": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "United States"
                                    },
                                    "hizbe_saifee_group_id": {
                                        "description": "ID of the assigned Hizbe Saifee Group",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Mumineen record created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mumineen"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Unauthenticated."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "The given data was invalid.",
                                    "errors": []
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/mumineen/{its_id}": {
            "get": {
                "tags": [
                    "Mumineen"
                ],
                "summary": "Get a specific Mumineen record",
                "description": "Returns a specific Mumineen record by their encrypted ITS ID. Requires authentication.",
                "operationId": "getMumineen",
                "parameters": [
                    {
                        "name": "its_id",
                        "in": "path",
                        "description": "Encrypted ITS ID of the Mumineen to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mumineen"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Unauthenticated."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Mumineen not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "success": false,
                                    "message": "Mumineen not found"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Mumineen"
                ],
                "summary": "Update a Mumineen record",
                "description": "Updates a specific Mumineen record by their encrypted ITS ID. Requires authentication.",
                "operationId": "updateMumineen",
                "parameters": [
                    {
                        "name": "its_id",
                        "in": "path",
                        "description": "Encrypted ITS ID of the Mumineen to update.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Mumineen data to update.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "hof_id": {
                                        "description": "Encrypted ITS ID of the Head of Family.",
                                        "type": "string",
                                        "example": "encrypted_string"
                                    },
                                    "full_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female"
                                        ],
                                        "example": "male"
                                    },
                                    "age": {
                                        "type": "integer",
                                        "example": 31
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "United States"
                                    },
                                    "hizbe_saifee_group_id": {
                                        "description": "ID of the assigned Hizbe Saifee Group",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Mumineen record updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mumineen"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Unauthenticated."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Mumineen not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Mumineen"
                ],
                "summary": "Delete a Mumineen record",
                "description": "Deletes a specific Mumineen record by their encrypted ITS ID. Requires authentication.",
                "operationId": "deleteMumineen",
                "parameters": [
                    {
                        "name": "its_id",
                        "in": "path",
                        "description": "Encrypted ITS ID of the Mumineen to delete.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mumineen record deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "success": true,
                                    "message": "Mumineen record deleted successfully"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Unauthenticated."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Mumineen not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/mumineen/family-by-its-id/{its_id}": {
            "get": {
                "tags": [
                    "Mumineen"
                ],
                "summary": "Get all family members by ITS ID",
                "description": "Finds the Head of Family (HOF) for the given member (by their encrypted ITS ID) and returns all members of that family. Requires authentication.",
                "operationId": "getMumineenFamilyByItsId",
                "parameters": [
                    {
                        "name": "its_id",
                        "in": "path",
                        "description": "Encrypted ITS ID of a family member.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Family members retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "success": true,
                                    "data": []
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Unauthenticated."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Mumineen not found or no HOF ITS ID available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "success": false,
                                    "message": "Mumineen not found or no HOF ITS ID available"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/mumineen/pass-preference/breakdown": {
            "get": {
                "tags": [
                    "Mumineen"
                ],
                "summary": "Get all Mumineen with their pass preferences for a specific event",
                "description": "Returns a list of all Mumineen records. For each Mumineen, it includes their pass preference details if one exists for the specified event ID.",
                "operationId": "getMumineenPassPreferenceBreakdown",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "query",
                        "description": "ID of the event to filter pass preferences by.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "allOf": [
                                                    {
                                                        "$ref": "#/components/schemas/Mumineen"
                                                    },
                                                    {
                                                        "properties": {
                                                            "pass_preferences": {
                                                                "description": "List of pass preferences for the event, with vaaz_center object replaced by vaaz_center_name.",
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "example": 1
                                                                        },
                                                                        "its_id": {
                                                                            "type": "integer",
                                                                            "example": 10101010
                                                                        },
                                                                        "event_id": {
                                                                            "type": "integer",
                                                                            "example": 1
                                                                        },
                                                                        "pass_type": {
                                                                            "type": "string",
                                                                            "example": "GENERAL"
                                                                        },
                                                                        "vaaz_center_id": {
                                                                            "type": "integer",
                                                                            "example": 5
                                                                        },
                                                                        "block_id": {
                                                                            "type": "integer",
                                                                            "example": 2
                                                                        },
                                                                        "vaaz_center_name": {
                                                                            "type": "string",
                                                                            "example": "Al-Masjid al-Husayni"
                                                                        },
                                                                        "block": {
                                                                            "$ref": "#/components/schemas/Block"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "The given data was invalid.",
                                    "errors": []
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/mumineen/bulk": {
            "post": {
                "tags": [
                    "Mumineen"
                ],
                "summary": "Bulk upload/synchronize Mumineen from a CSV file",
                "description": "Upload a CSV file to add, update, and remove Mumineen records. The CSV is treated as the source of truth. Any Mumineen in the database but not in the CSV will be deleted, along with their pass preferences. Requires admin authentication.",
                "operationId": "bulkStoreMumineen",
                "requestBody": {
                    "description": "CSV file to upload. The first row must be a header row with column names matching the `mumineens` table fields (e.g., its_id, hof_id, fullname, gender, age, jamaat, mobile (optional), country (optional), etc.).",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "description": "The CSV file.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bulk operation completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "success": true,
                                    "message": "Bulk upload completed successfully.",
                                    "summary": {
                                        "processed": 50,
                                        "deleted": 5,
                                        "updated_or_created": 45
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error (e.g., no file, wrong file type)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "The given data was invalid.",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred during the bulk processing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "success": false,
                                    "message": "An error occurred during bulk processing."
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admin access required)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/mumineen/sample-csv": {
            "get": {
                "tags": [
                    "Mumineen"
                ],
                "summary": "Download a sample CSV for Mumineen bulk upload",
                "description": "Provides a CSV file with header rows for bulk uploading Mumineen data. Requires admin authentication.",
                "operationId": "downloadSampleMumineenCsv",
                "responses": {
                    "200": {
                        "description": "Sample CSV file",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error generating CSV file"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden (Admin access required)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/mumineen/auto-assign-groups": {
            "post": {
                "tags": [
                    "Mumineen"
                ],
                "summary": "Automatically assign Mumineen to Hizbe Saifee groups",
                "description": "Assigns Mumineen who currently have no Hizbe Saifee group to available groups based on family and group capacity. Requires admin authentication.",
                "operationId": "autoAssignHizbeSaifeeGroups",
                "responses": {
                    "200": {
                        "description": "Assignment process completed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Hizbe Saifee group assignment process completed."
                                        },
                                        "summary": {
                                            "properties": {
                                                "families_processed": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "mumineen_assigned": {
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "unassigned_families": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "hof_id": {
                                                                "type": "string",
                                                                "example": "encrypted_string"
                                                            },
                                                            "size": {
                                                                "type": "integer",
                                                                "example": 5
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden (Admin access required)"
                    },
                    "500": {
                        "description": "An error occurred during the assignment process"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pass-preferences/summary": {
            "get": {
                "tags": [
                    "Pass Preferences"
                ],
                "summary": "Get pass availability summary for an event",
                "description": "Returns a summary of pass availability, including Vaaz centers and their blocks, for a specific event.",
                "operationId": "getPassPreferenceSummary",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "query",
                        "description": "ID of the event to get summary for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "vaaz_center_id",
                        "in": "query",
                        "description": "Optional ID of the Vaaz Center to filter summary for",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Vaaz Center ID",
                                                "type": "integer"
                                            },
                                            "name": {
                                                "description": "Vaaz Center Name",
                                                "type": "string"
                                            },
                                            "vaaz_center_capacity": {
                                                "description": "Capacity of the Vaaz Center",
                                                "type": "integer"
                                            },
                                            "vaaz_center_issued_passes": {
                                                "description": "Number of passes issued for the Vaaz Center",
                                                "type": "integer"
                                            },
                                            "vaaz_center_availability": {
                                                "description": "Availability in Vaaz Center (number or 'unlimited')"
                                            },
                                            "blocks": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "description": "Block ID",
                                                            "type": "integer"
                                                        },
                                                        "type": {
                                                            "description": "Block Type/Name",
                                                            "type": "string"
                                                        },
                                                        "capacity": {
                                                            "description": "Capacity of the Block",
                                                            "type": "integer"
                                                        },
                                                        "gender": {
                                                            "description": "Gender for the Block",
                                                            "type": "string",
                                                            "enum": [
                                                                "Male",
                                                                "Female",
                                                                "All"
                                                            ]
                                                        },
                                                        "min_age": {
                                                            "description": "Minimum age for the Block",
                                                            "type": "integer",
                                                            "nullable": true
                                                        },
                                                        "max_age": {
                                                            "description": "Maximum age for the Block",
                                                            "type": "integer",
                                                            "nullable": true
                                                        },
                                                        "block_issued_passes": {
                                                            "description": "Number of passes issued for the Block",
                                                            "type": "integer"
                                                        },
                                                        "block_availability": {
                                                            "description": "Availability in Block (number or 'unlimited')"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Unauthenticated."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "event_id": [
                                        "The event id field is required."
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified Vaaz Center was not found for the given event.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "The specified Vaaz Center was not found for the given event."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pass-preferences/vaaz-center-summary": {
            "get": {
                "tags": [
                    "Pass Preferences"
                ],
                "summary": "Get Vaaz Center pass availability summary for an event",
                "description": "Returns a summary of pass availability for Vaaz centers, for a specific event. Does not include block details.",
                "operationId": "getVaazCenterPassPreferenceSummary",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "query",
                        "description": "ID of the event to get summary for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "vaaz_center_id",
                        "in": "query",
                        "description": "Optional ID of the Vaaz Center to filter summary for",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Vaaz Center ID",
                                                "type": "integer"
                                            },
                                            "name": {
                                                "description": "Vaaz Center Name",
                                                "type": "string"
                                            },
                                            "vaaz_center_capacity": {
                                                "description": "Capacity of the Vaaz Center",
                                                "type": "integer"
                                            },
                                            "vaaz_center_issued_passes": {
                                                "description": "Number of passes issued for the Vaaz Center",
                                                "type": "integer"
                                            },
                                            "vaaz_center_availability": {
                                                "description": "Availability in Vaaz Center (number or 'unlimited')"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "The specified Vaaz Center was not found for the given event."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pass-preferences": {
            "get": {
                "tags": [
                    "Pass Preferences"
                ],
                "summary": "Get a specific pass preference by ITS ID",
                "description": "Returns a single pass preference if an ITS ID is provided. The user must be authorized to view the preference for the given ITS ID. Listing all preferences is restricted and will return an empty array.",
                "operationId": "getPassPreferences",
                "parameters": [
                    {
                        "name": "its_id",
                        "in": "query",
                        "description": "Encrypted ITS ID of the mumineen to retrieve a specific pass preference. If not provided, returns an empty array.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation. Returns a single PassPreference object or an empty array.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "id": 1,
                                    "its_id": 12345,
                                    "event_id": 1,
                                    "pass_type": "RAHAT",
                                    "block_id": 1,
                                    "vaaz_center_id": 1,
                                    "created_at": "2023-01-01T00:00:00.000000Z",
                                    "updated_at": "2023-01-01T00:00:00.000000Z",
                                    "block": {
                                        "id": 1,
                                        "name": "Block A"
                                    },
                                    "vaazCenter": {
                                        "id": 1,
                                        "name": "Center 1"
                                    },
                                    "event": {
                                        "id": 1,
                                        "name": "Event Name"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Unauthenticated."
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. User is not authorized to view this preference.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "You are not authorized to view this pass preference."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pass Preference not found for the given ITS ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Pass Preference not found for this ITS number"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Pass Preferences"
                ],
                "summary": "Update one or more existing pass preferences",
                "description": "Updates one or more existing pass preference records in a single transaction. Each object in the array must contain an 'its_id' to identify the record.",
                "operationId": "updatePassPreference",
                "requestBody": {
                    "description": "An array of pass preference data objects to update.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "required": [
                                        "its_id"
                                    ],
                                    "properties": {
                                        "its_id": {
                                            "description": "Encrypted ITS ID of the mumineen whose preference is to be updated.",
                                            "type": "string"
                                        },
                                        "event_id": {
                                            "description": "ID of the event",
                                            "type": "integer",
                                            "nullable": true
                                        },
                                        "pass_type": {
                                            "description": "Type of pass",
                                            "type": "string",
                                            "enum": [
                                                "RAHAT",
                                                "CHAIR",
                                                "GENERAL",
                                                "MUM_WITH_KIDS"
                                            ],
                                            "nullable": true
                                        },
                                        "block_id": {
                                            "description": "ID of the block",
                                            "type": "integer",
                                            "nullable": true
                                        },
                                        "vaaz_center_id": {
                                            "description": "ID of the Vaaz center",
                                            "type": "integer",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pass preferences updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Pass preferences updated successfully."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pass Preference not found for one or more records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Pass Preference not found for ITS: 12345678."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Unauthenticated."
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. User is not authorized to update a preference for one or more ITS numbers.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Authorization failed for one or more ITS numbers."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or business logic error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Error for ITS 12345678: The selected block is full."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Pass Preferences"
                ],
                "summary": "Create one or more new pass preferences",
                "description": "Creates one or more new pass preference records in a single transaction. The ITS ID is expected to be encrypted.",
                "operationId": "storePassPreference",
                "requestBody": {
                    "description": "An array of pass preference objects to create.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "required": [
                                        "its_id",
                                        "event_id"
                                    ],
                                    "properties": {
                                        "its_id": {
                                            "description": "Encrypted ITS ID of the mumineen. Must be unique.",
                                            "type": "string"
                                        },
                                        "event_id": {
                                            "description": "ID of the event",
                                            "type": "integer"
                                        },
                                        "pass_type": {
                                            "description": "Type of pass",
                                            "type": "string",
                                            "enum": [
                                                "RAHAT",
                                                "CHAIR",
                                                "GENERAL",
                                                "MUM_WITH_KIDS"
                                            ],
                                            "nullable": true
                                        },
                                        "block_id": {
                                            "description": "ID of the block",
                                            "type": "integer",
                                            "nullable": true
                                        },
                                        "vaaz_center_id": {
                                            "description": "ID of the Vaaz center",
                                            "type": "integer",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Pass preferences created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "example": {
                                            "id": 1,
                                            "its_id": 12345,
                                            "event_id": 1,
                                            "pass_type": "RAHAT",
                                            "block_id": 1,
                                            "vaaz_center_id": 1,
                                            "created_at": "2023-01-01T00:00:00.000000Z",
                                            "updated_at": "2023-01-01T00:00:00.000000Z"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Unauthenticated."
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. User is not authorized to create a preference for one or more ITS numbers.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Authorization failed for one or more ITS numbers."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or business logic error (e.g., capacity full, incorrect associations)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "The selected block is full for ITS 12345"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Pass Preferences"
                ],
                "summary": "Delete a pass preference",
                "description": "Deletes a pass preference record identified by its ITS ID. The ITS ID in the body is expected to be encrypted.",
                "operationId": "deletePassPreference",
                "parameters": [
                    {
                        "name": "its_id",
                        "in": "query",
                        "description": "Encrypted ITS ID of the mumineen whose preference is to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "event_id",
                        "in": "query",
                        "description": "ID of the event for which the preference is to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pass preference deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Pass Preference deleted successfully."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Unauthenticated."
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "You are not authorized to delete this pass preference."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pass Preference not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Pass Preference not found for the given ITS number."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "its_id": [
                                        "The its id field is required."
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pass-preferences/vaaz-center": {
            "put": {
                "tags": [
                    "Pass Preferences"
                ],
                "summary": "Update the Vaaz Center for one or more pass preferences",
                "description": "Updates the Vaaz Center for multiple pass preferences in a single transaction. If a preference had a block assigned, and that block does not belong to the new Vaaz Center, the block assignment will be removed (set to null).",
                "operationId": "updatePassPreferenceVaazCenter",
                "requestBody": {
                    "description": "An array of objects, each with ITS ID, Event ID, and new Vaaz Center ID",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "required": [
                                        "its_id",
                                        "event_id",
                                        "vaaz_center_id"
                                    ],
                                    "properties": {
                                        "its_id": {
                                            "description": "Encrypted ITS ID of the mumineen (decrypted by middleware)",
                                            "type": "string"
                                        },
                                        "event_id": {
                                            "description": "ID of the event",
                                            "type": "integer"
                                        },
                                        "vaaz_center_id": {
                                            "description": "ID of the new Vaaz center",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vaaz Center updated successfully for all preferences",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Pass preferences updated successfully."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - User not authorized to update one or more preferences"
                    },
                    "404": {
                        "description": "Pass Preference or Vaaz Center not found for one of the entries"
                    },
                    "422": {
                        "description": "Validation error or business logic error (e.g. Vaaz center not for this event, capacity full)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Pass Preferences"
                ],
                "summary": "Create one or more new pass preferences with a specific Vaaz Center",
                "description": "Creates one or more new pass preference records in a single transaction, assigning a Vaaz Center. Each ITS ID must be unique for the given Event ID.",
                "operationId": "storePassPreferenceVaazCenter",
                "requestBody": {
                    "description": "An array of objects, each with ITS ID, Event ID, and Vaaz Center ID for the new preference",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "required": [
                                        "its_id",
                                        "event_id",
                                        "vaaz_center_id"
                                    ],
                                    "properties": {
                                        "its_id": {
                                            "description": "Encrypted ITS ID of the mumineen (decrypted by middleware)",
                                            "type": "string"
                                        },
                                        "event_id": {
                                            "description": "ID of the event",
                                            "type": "integer"
                                        },
                                        "vaaz_center_id": {
                                            "description": "ID of the Vaaz center",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Pass preferences created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PassPreference"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - User not authorized for one or more ITS numbers"
                    },
                    "404": {
                        "description": "Vaaz Center not found"
                    },
                    "422": {
                        "description": "Validation error (e.g., already exists, Vaaz center not for this event, capacity full)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pass-preferences/pass-type": {
            "put": {
                "tags": [
                    "Pass Preferences"
                ],
                "summary": "Update the Pass Type for a specific pass preference",
                "description": "Updates the Pass Type for a pass preference identified by ITS ID and Event ID.",
                "operationId": "updatePassPreferencePassType",
                "requestBody": {
                    "description": "ITS ID, Event ID, and new Pass Type",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "its_id",
                                    "event_id",
                                    "pass_type"
                                ],
                                "properties": {
                                    "its_id": {
                                        "description": "Encrypted ITS ID of the mumineen (decrypted by middleware)",
                                        "type": "string"
                                    },
                                    "event_id": {
                                        "description": "ID of the event",
                                        "type": "integer"
                                    },
                                    "pass_type": {
                                        "description": "New type of pass",
                                        "type": "string",
                                        "enum": [
                                            "RAHAT",
                                            "CHAIR",
                                            "GENERAL",
                                            "MUM_WITH_KIDS"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pass Type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PassPreference"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - User not authorized"
                    },
                    "404": {
                        "description": "Pass Preference not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Pass Preferences"
                ],
                "summary": "Create a new pass preference with a specific Pass Type",
                "description": "Creates a new pass preference record identified by ITS ID and Event ID, assigning a Pass Type. ITS ID must be unique for the given Event ID.",
                "operationId": "storePassPreferencePassType",
                "requestBody": {
                    "description": "ITS ID, Event ID, and Pass Type for the new preference",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "its_id",
                                    "event_id",
                                    "pass_type"
                                ],
                                "properties": {
                                    "its_id": {
                                        "description": "Encrypted ITS ID of the mumineen (decrypted by middleware)",
                                        "type": "string"
                                    },
                                    "event_id": {
                                        "description": "ID of the event",
                                        "type": "integer"
                                    },
                                    "pass_type": {
                                        "description": "Type of pass",
                                        "type": "string",
                                        "enum": [
                                            "RAHAT",
                                            "CHAIR",
                                            "GENERAL",
                                            "MUM_WITH_KIDS"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Pass preference created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PassPreference"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - User not authorized"
                    },
                    "422": {
                        "description": "Validation error (e.g., already exists)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pass-types": {
            "get": {
                "tags": [
                    "Pass Preferences"
                ],
                "summary": "Get all available pass types",
                "description": "Returns a list of all available pass types defined in the PassType enum.",
                "operationId": "getAvailablePassTypes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "example": "RAHAT"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pass-preferences/lock-preferences": {
            "put": {
                "tags": [
                    "Pass Preferences"
                ],
                "summary": "Bulk update the lock status of pass preferences",
                "description": "Updates the `is_locked` status for multiple pass preferences in a single transaction.",
                "operationId": "bulkUpdateLockStatus",
                "requestBody": {
                    "description": "An object containing an array of ITS IDs and the new lock status.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "its_ids",
                                    "is_locked"
                                ],
                                "properties": {
                                    "its_ids": {
                                        "description": "Array of ITS IDs whose lock status is to be updated.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "10101010"
                                        }
                                    },
                                    "is_locked": {
                                        "description": "The new lock status to apply.",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lock status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Lock status updated for X records."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pass-preferences/bulk-assign-vaaz-center": {
            "put": {
                "tags": [
                    "Pass Preferences"
                ],
                "summary": "Bulk assign multiple Mumineen to a Vaaz Center",
                "description": "Assigns a list of Mumineen (by ITS ID) to a specified Vaaz Center for a given event. This is an admin-only endpoint that checks for gender-specific capacity.",
                "operationId": "bulkAssignVaazCenter",
                "requestBody": {
                    "description": "Object containing the event ID, Vaaz Center ID, an array of ITS IDs, and the gender.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "event_id",
                                    "vaaz_center_id",
                                    "its_ids",
                                    "gender"
                                ],
                                "properties": {
                                    "event_id": {
                                        "description": "The ID of the event.",
                                        "type": "integer"
                                    },
                                    "vaaz_center_id": {
                                        "description": "The ID of the Vaaz Center to assign.",
                                        "type": "integer"
                                    },
                                    "its_ids": {
                                        "description": "An array of Mumineen ITS IDs to assign.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "gender": {
                                        "description": "The gender to assign, used for capacity checking.",
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Assignment successful"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden (Admin access required)"
                    },
                    "422": {
                        "description": "Validation error, capacity exceeded, or gender mismatch"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vaaz-centers": {
            "get": {
                "tags": [
                    "Vaaz Centers"
                ],
                "summary": "Get list of Vaaz Centers or a single one by ID",
                "description": "Returns a list of Vaaz Centers. Can be filtered by event_id or a single Vaaz Center by id. Requires authentication.",
                "operationId": "getVaazCentersListOrSingle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the Vaaz Center to retrieve.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "event_id",
                        "in": "query",
                        "description": "Filter Vaaz Centers by Event ID.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VaazCenter"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Vaaz Center not found (if ID is provided and not found)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vaaz Centers"
                ],
                "summary": "Create a new Vaaz Center",
                "description": "Stores a new Vaaz Center record. Requires authentication.",
                "operationId": "storeVaazCenter",
                "requestBody": {
                    "description": "Vaaz Center data object.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "est_capacity"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Al Masjid Al Husaini"
                                    },
                                    "est_capacity": {
                                        "description": "Estimated total capacity.",
                                        "type": "integer",
                                        "example": 1000
                                    },
                                    "male_capacity": {
                                        "description": "Estimated male capacity.",
                                        "type": "integer",
                                        "example": 500,
                                        "nullable": true
                                    },
                                    "female_capacity": {
                                        "description": "Estimated female capacity.",
                                        "type": "integer",
                                        "example": 500,
                                        "nullable": true
                                    },
                                    "lat": {
                                        "description": "Latitude.",
                                        "type": "number",
                                        "format": "float",
                                        "example": 6.9271,
                                        "nullable": true
                                    },
                                    "long": {
                                        "description": "Longitude.",
                                        "type": "number",
                                        "format": "float",
                                        "example": 79.8612,
                                        "nullable": true
                                    },
                                    "event_id": {
                                        "description": "Associated Event ID.",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vaaz Center created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VaazCenter"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Unauthenticated."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "The given data was invalid.",
                                    "errors": []
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vaaz-centers/{id}": {
            "put": {
                "tags": [
                    "Vaaz Centers"
                ],
                "summary": "Update an existing Vaaz Center",
                "description": "Updates an existing Vaaz Center record. Requires authentication.",
                "operationId": "updateVaazCenter",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Vaaz Center to update.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Vaaz Center data to update.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Al Masjid Al Husaini - Updated"
                                    },
                                    "est_capacity": {
                                        "description": "Estimated total capacity.",
                                        "type": "integer",
                                        "example": 1200
                                    },
                                    "male_capacity": {
                                        "description": "Estimated male capacity.",
                                        "type": "integer",
                                        "example": 600,
                                        "nullable": true
                                    },
                                    "female_capacity": {
                                        "description": "Estimated female capacity.",
                                        "type": "integer",
                                        "example": 600,
                                        "nullable": true
                                    },
                                    "lat": {
                                        "description": "Latitude.",
                                        "type": "number",
                                        "format": "float",
                                        "example": 6.9275,
                                        "nullable": true
                                    },
                                    "long": {
                                        "description": "Longitude.",
                                        "type": "number",
                                        "format": "float",
                                        "example": 79.8615,
                                        "nullable": true
                                    },
                                    "event_id": {
                                        "description": "Associated Event ID.",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vaaz Center updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VaazCenter"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Vaaz Center not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Vaaz Centers"
                ],
                "summary": "Delete a Vaaz Center",
                "description": "Deletes a Vaaz Center by its ID. Requires authentication.",
                "operationId": "deleteVaazCenter",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Vaaz Center to delete.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Vaaz Center deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Vaaz Center not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "StoreHizbeSaifeeGroupRequest": {
                "title": "Store Hizbe Saifee Group Request",
                "required": [
                    "name",
                    "capacity",
                    "group_no"
                ],
                "properties": {
                    "name": {
                        "description": "Name of the group",
                        "type": "string",
                        "example": "Al-Ameen Group"
                    },
                    "capacity": {
                        "description": "Capacity of the group",
                        "type": "integer",
                        "example": 50
                    },
                    "group_no": {
                        "description": "Unique group number",
                        "type": "integer",
                        "example": 101
                    },
                    "whatsapp_link": {
                        "description": "WhatsApp group link",
                        "type": "string",
                        "example": "https://chat.whatsapp.com/samplelink",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateHizbeSaifeeGroupRequest": {
                "title": "Update Hizbe Saifee Group Request",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the group to update",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name of the group",
                        "type": "string",
                        "example": "Al-Ameen Group Updated"
                    },
                    "capacity": {
                        "description": "Capacity of the group",
                        "type": "integer",
                        "example": 55
                    },
                    "group_no": {
                        "description": "Unique group number",
                        "type": "integer",
                        "example": 102
                    },
                    "whatsapp_link": {
                        "description": "WhatsApp group link",
                        "type": "string",
                        "example": "https://chat.whatsapp.com/newlink",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "HizbeSaifeeGroupResponse": {
                "title": "Hizbe Saifee Group Response",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/HizbeSaifeeGroup"
                    }
                },
                "type": "object"
            },
            "Accommodation": {
                "required": [
                    "miqaat_id",
                    "its_id",
                    "type",
                    "name",
                    "address"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/HizbeSaifeeGroupResponse"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "readOnly": true,
                                "example": 1
                            },
                            "miqaat_id": {
                                "type": "integer",
                                "example": 1
                            },
                            "its_id": {
                                "description": "Decrypted ITS ID",
                                "type": "integer",
                                "example": 12345678
                            },
                            "type": {
                                "type": "string",
                                "example": "Hotel"
                            },
                            "name": {
                                "type": "string",
                                "example": "Grand Hyatt"
                            },
                            "address": {
                                "type": "string",
                                "example": "123 Main St, Colombo"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "User's name",
                        "type": "string"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email"
                    },
                    "email_verified_at": {
                        "description": "Timestamp of email verification",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Block": {
                "title": "Block",
                "description": "Block model schema for seating arrangements within a Vaaz Center",
                "properties": {
                    "id": {
                        "description": "Primary key ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vaaz_center_id": {
                        "description": "ID of the Vaaz Center this block belongs to",
                        "type": "integer"
                    },
                    "type": {
                        "description": "Type or name of the block (e.g., 'Section A', 'Balcony')",
                        "type": "string"
                    },
                    "capacity": {
                        "description": "Capacity of the block",
                        "type": "integer",
                        "nullable": true
                    },
                    "min_age": {
                        "description": "Minimum age for this block, if applicable",
                        "type": "integer",
                        "nullable": true
                    },
                    "max_age": {
                        "description": "Maximum age for this block, if applicable",
                        "type": "integer",
                        "nullable": true
                    },
                    "gender": {
                        "description": "Gender restriction for this block, if applicable",
                        "type": "string",
                        "enum": [
                            "Male",
                            "Female",
                            "Any"
                        ],
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Timestamp of creation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp of last update",
                        "type": "string",
                        "format": "date-time"
                    },
                    "vaazCenter": {
                        "$ref": "#/components/schemas/VaazCenter"
                    }
                },
                "type": "object"
            },
            "Event": {
                "title": "Event",
                "description": "Event model schema",
                "properties": {
                    "id": {
                        "description": "Primary key ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "miqaat_id": {
                        "description": "ID of the Miqaat this event belongs to",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the event (e.g., 'Ashara Mubaraka 1445H - Colombo')",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of the event (e.g., 'active', 'upcoming', 'past')",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp of creation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp of last update",
                        "type": "string",
                        "format": "date-time"
                    },
                    "miqaat": {
                        "$ref": "#/components/schemas/Miqaat"
                    },
                    "vaazCenters": {
                        "description": "List of Vaaz Centers for this event",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VaazCenter"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "HizbeSaifeeGroup": {
                "title": "Hizbe Saifee Group",
                "description": "Hizbe Saifee Group model",
                "properties": {
                    "id": {
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name of the group",
                        "type": "string"
                    },
                    "capacity": {
                        "description": "Capacity of the group",
                        "type": "integer"
                    },
                    "group_no": {
                        "description": "Unique group number",
                        "type": "integer"
                    },
                    "whatsapp_link": {
                        "description": "WhatsApp group link",
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Miqaat": {
                "title": "Miqaat",
                "description": "Miqaat model schema (e.g., a religious occasion or event series)",
                "properties": {
                    "id": {
                        "description": "Primary key ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name of the Miqaat (e.g., 'Ashara Mubaraka 1445H')",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of the Miqaat (e.g., 'active', 'upcoming', 'past')",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp of creation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp of last update",
                        "type": "string",
                        "format": "date-time"
                    },
                    "events": {
                        "description": "List of events associated with this Miqaat",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Mumineen": {
                "title": "Mumineen",
                "description": "Mumineen model",
                "properties": {
                    "its_id": {
                        "description": "Primary key ITS ID",
                        "type": "integer"
                    },
                    "hof_id": {
                        "description": "Head of Family ITS ID",
                        "type": "integer",
                        "nullable": true
                    },
                    "fullname": {
                        "description": "Full name",
                        "type": "string"
                    },
                    "gender": {
                        "description": "Gender",
                        "type": "string",
                        "enum": [
                            "male",
                            "female",
                            "other"
                        ]
                    },
                    "age": {
                        "description": "Age",
                        "type": "integer",
                        "nullable": true
                    },
                    "mobile": {
                        "description": "Mobile number",
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "description": "Country",
                        "type": "string",
                        "nullable": true
                    },
                    "jamaat": {
                        "description": "Jamaat",
                        "type": "string",
                        "nullable": true
                    },
                    "idara": {
                        "description": "Idara",
                        "type": "string",
                        "nullable": true
                    },
                    "category": {
                        "description": "Category",
                        "type": "string",
                        "nullable": true
                    },
                    "prefix": {
                        "description": "Prefix",
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "description": "Title",
                        "type": "string",
                        "nullable": true
                    },
                    "venue_waaz": {
                        "description": "Waaz Venue",
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "description": "City",
                        "type": "string",
                        "nullable": true
                    },
                    "local_mehman": {
                        "description": "Local Mehman Status",
                        "type": "string",
                        "nullable": true
                    },
                    "arr_place_date": {
                        "description": "Arrival Place Date",
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "flight_code": {
                        "description": "Flight Code",
                        "type": "string",
                        "nullable": true
                    },
                    "whatsapp_link_clicked": {
                        "description": "WhatsApp Link Clicked Status",
                        "type": "boolean",
                        "nullable": true
                    },
                    "daily_trans": {
                        "description": "Daily Transport",
                        "type": "string",
                        "nullable": true
                    },
                    "acc_arranged_at": {
                        "description": "Accommodation Arranged At",
                        "type": "string",
                        "nullable": true
                    },
                    "acc_zone": {
                        "description": "Accommodation Zone",
                        "type": "string",
                        "nullable": true
                    },
                    "hizbe_saifee_group_id": {
                        "description": "ID of the assigned Hizbe Saifee Group",
                        "type": "integer",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "hizbe_saifee_group": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/HizbeSaifeeGroup"
                            }
                        ],
                        "nullable": true,
                        "description": "The assigned Hizbe Saifee Group"
                    }
                },
                "type": "object"
            },
            "PassPreference": {
                "title": "Pass Preference",
                "description": "Pass Preference model schema",
                "properties": {
                    "id": {
                        "description": "Primary key ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "its_id": {
                        "description": "ITS ID of the mumineen",
                        "type": "integer"
                    },
                    "event_id": {
                        "description": "ID of the associated event",
                        "type": "integer"
                    },
                    "pass_type": {
                        "description": "Type of pass allocated",
                        "type": "string",
                        "enum": [
                            "RAHAT",
                            "CHAIR",
                            "GENERAL",
                            "MUM_WITH_KIDS"
                        ]
                    },
                    "block_id": {
                        "description": "ID of the assigned block, if any",
                        "type": "integer",
                        "nullable": true
                    },
                    "vaaz_center_id": {
                        "description": "ID of the assigned Vaaz center, if any",
                        "type": "integer",
                        "nullable": true
                    },
                    "is_locked": {
                        "description": "Indicates if the preference is locked from changes",
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "description": "Timestamp of creation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp of last update",
                        "type": "string",
                        "format": "date-time"
                    },
                    "block": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Block"
                            }
                        ],
                        "nullable": true,
                        "description": "Associated Block model",
                        "type": "object"
                    },
                    "vaazCenter": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VaazCenter"
                            }
                        ],
                        "nullable": true,
                        "description": "Associated VaazCenter model",
                        "type": "object"
                    },
                    "event": {
                        "$ref": "#/components/schemas/Event"
                    }
                },
                "type": "object"
            },
            "VaazCenter": {
                "title": "Vaaz Center",
                "description": "Vaaz Center model schema",
                "properties": {
                    "id": {
                        "description": "Primary key ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name of the Vaaz Center",
                        "type": "string"
                    },
                    "event_id": {
                        "description": "ID of the Event this center belongs to",
                        "type": "integer"
                    },
                    "est_capacity": {
                        "description": "Estimated capacity of the center",
                        "type": "integer",
                        "nullable": true
                    },
                    "lat": {
                        "description": "Latitude of the center",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "long": {
                        "description": "Longitude of the center",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Timestamp of creation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp of last update",
                        "type": "string",
                        "format": "date-time"
                    },
                    "event": {
                        "$ref": "#/components/schemas/Event"
                    },
                    "blocks": {
                        "description": "List of blocks within this center",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Block"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter token in format (Bearer <token>)",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for User Authentication"
        },
        {
            "name": "Hizbe Saifee Groups",
            "description": "API Endpoints for Hizbe Saifee Groups Management (Admin Only)"
        },
        {
            "name": "Pass Preferences",
            "description": "API Endpoints for managing Pass Preferences"
        },
        {
            "name": "Accommodations",
            "description": "Accommodations"
        },
        {
            "name": "Mumineen",
            "description": "Mumineen"
        },
        {
            "name": "Vaaz Centers",
            "description": "Vaaz Centers"
        }
    ]
}